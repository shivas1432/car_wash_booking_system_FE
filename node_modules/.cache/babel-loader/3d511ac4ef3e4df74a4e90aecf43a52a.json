{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\MyBookings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../context/UserContext'; // Import UserContext\nimport '../css/MyBookings.css'; // Custom CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyBookings() {\n  _s();\n  const {\n    userData\n  } = useContext(UserContext); // Get the user data from context\n  const [bookings, setBookings] = useState([]); // State to hold the bookings\n\n  // Use the bookings data directly from userData stored in context\n  useEffect(() => {\n    if (userData && userData.bookings && Array.isArray(userData.bookings)) {\n      setBookings(userData.bookings); // Set bookings from userData\n    } else {\n      console.log('No bookings found in user data.');\n    }\n  }, [userData]); // Re-run effect if userData changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-bookings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), bookings.length > 0 ? bookings.map(booking => {\n      // Safely handle 'status' and ensure it's a string\n      const status = booking.status ? booking.status.toLowerCase() : 'unknown'; // Default to 'unknown' if status is undefined\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: booking.service\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Date: ${booking.date} | Time: ${booking.timeSlot}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Total: $${booking.total}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status ${status}`,\n            children: [booking.status || 'Unknown Status', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, booking.bookingId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookings yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(MyBookings, \"bPqXF6Hk9fRfxwrVxoGexnI4F3M=\");\n_c = MyBookings;\nvar _c;\n$RefreshReg$(_c, \"MyBookings\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","jsxDEV","_jsxDEV","MyBookings","_s","userData","bookings","setBookings","Array","isArray","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","booking","status","toLowerCase","service","date","timeSlot","total","bookingId","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/MyBookings.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport UserContext from '../context/UserContext';  // Import UserContext\r\nimport '../css/MyBookings.css'; // Custom CSS for styling\r\n\r\nexport default function MyBookings() {\r\n  const { userData } = useContext(UserContext);  // Get the user data from context\r\n  const [bookings, setBookings] = useState([]);   // State to hold the bookings\r\n\r\n  // Use the bookings data directly from userData stored in context\r\n  useEffect(() => {\r\n    if (userData && userData.bookings && Array.isArray(userData.bookings)) {\r\n      setBookings(userData.bookings);  // Set bookings from userData\r\n    } else {\r\n      console.log('No bookings found in user data.');\r\n    }\r\n  }, [userData]);  // Re-run effect if userData changes\r\n\r\n  return (\r\n    <div className=\"my-bookings-container\">\r\n      <h2>My Bookings</h2>\r\n      {bookings.length > 0 ? (\r\n        bookings.map((booking) => {\r\n          // Safely handle 'status' and ensure it's a string\r\n          const status = booking.status ? booking.status.toLowerCase() : 'unknown'; // Default to 'unknown' if status is undefined\r\n\r\n          return (\r\n            <div className=\"booking-card\" key={booking.bookingId}>\r\n              <div className=\"booking-info\">\r\n                <h4>{booking.service}</h4>\r\n                <p>{`Date: ${booking.date} | Time: ${booking.timeSlot}`}</p>\r\n                <p>{`Total: $${booking.total}`}</p>\r\n                <div className={`status ${status}`}>\r\n                  {booking.status || 'Unknown Status'} {/* Display 'Unknown Status' if no status */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <p>No bookings yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,wBAAwB,CAAC,CAAE;AACnD,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAS,CAAC,GAAGN,UAAU,CAACC,WAAW,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAG;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACC,QAAQ,CAAC,EAAE;MACrEC,WAAW,CAACF,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAE;IACnC,CAAC,MAAM;MACLI,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAE;;EAEjB,oBACEH,OAAA;IAAKU,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBX,QAAQ,CAACY,MAAM,GAAG,CAAC,GAClBZ,QAAQ,CAACa,GAAG,CAAEC,OAAO,IAAK;MACxB;MACA,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAM,GAAGD,OAAO,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;;MAE1E,oBACEpB,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BX,OAAA;UAAKU,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BX,OAAA;YAAAW,QAAA,EAAKO,OAAO,CAACG;UAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1Bf,OAAA;YAAAW,QAAA,EAAI,SAASO,OAAO,CAACI,IAAI,YAAYJ,OAAO,CAACK,QAAQ;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5Df,OAAA;YAAAW,QAAA,EAAI,WAAWO,OAAO,CAACM,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCf,OAAA;YAAKU,SAAS,EAAE,UAAUS,MAAM,EAAG;YAAAR,QAAA,GAChCO,OAAO,CAACC,MAAM,IAAI,gBAAgB,EAAC,GAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAR2BG,OAAO,CAACO,SAAS;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAS/C,CAAC;IAEV,CAAC,CAAC,gBAEFf,OAAA;MAAAW,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CAvCuBD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}