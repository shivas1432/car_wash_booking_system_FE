{"ast":null,"code":"// Add this to your booking.js routes file\n\n// Get available time slots for a specific date\nrouter.get('/available-slots', verifyToken, async (req, res) => {\n  try {\n    const {\n      date\n    } = req.query;\n    if (!date) {\n      return res.status(400).json({\n        message: 'Date parameter is required'\n      });\n    }\n\n    // Query all bookings for the selected date that are NOT cancelled\n    const bookings = await queryDb(`SELECT time_slot FROM bookings \n       WHERE date = ? AND status != 'cancelled'`, [date]);\n\n    // Extract the time slots that are already booked\n    const unavailableTimes = bookings.map(booking => booking.time_slot);\n    res.json({\n      date,\n      unavailableTimes\n    });\n  } catch (err) {\n    console.error(\"Error fetching available time slots:\", err);\n    res.status(500).json({\n      message: 'Server error'\n    });\n  }\n});","map":{"version":3,"names":["router","get","verifyToken","req","res","date","query","status","json","message","bookings","queryDb","unavailableTimes","map","booking","time_slot","err","console","error"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/Booking.jsx"],"sourcesContent":["// Add this to your booking.js routes file\r\n\r\n// Get available time slots for a specific date\r\nrouter.get('/available-slots', verifyToken, async (req, res) => {\r\n  try {\r\n    const { date } = req.query;\r\n    \r\n    if (!date) {\r\n      return res.status(400).json({ message: 'Date parameter is required' });\r\n    }\r\n    \r\n    // Query all bookings for the selected date that are NOT cancelled\r\n    const bookings = await queryDb(\r\n      `SELECT time_slot FROM bookings \r\n       WHERE date = ? AND status != 'cancelled'`, \r\n      [date]\r\n    );\r\n    \r\n    // Extract the time slots that are already booked\r\n    const unavailableTimes = bookings.map(booking => booking.time_slot);\r\n    \r\n    res.json({ \r\n      date,\r\n      unavailableTimes \r\n    });\r\n  } catch (err) {\r\n    console.error(\"Error fetching available time slots:\", err);\r\n    res.status(500).json({ message: 'Server error' });\r\n  }\r\n});"],"mappings":"AAAA;;AAEA;AACAA,MAAM,CAACC,GAAG,CAAC,kBAAkB,EAAEC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAGF,GAAG,CAACG,KAAK;IAE1B,IAAI,CAACD,IAAI,EAAE;MACT,OAAOD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAAC;IACxE;;IAEA;IACA,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAC5B;AACN,gDAAgD,EAC1C,CAACN,IAAI,CACP,CAAC;;IAED;IACA,MAAMO,gBAAgB,GAAGF,QAAQ,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,SAAS,CAAC;IAEnEX,GAAG,CAACI,IAAI,CAAC;MACPH,IAAI;MACJO;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,GAAG,CAAC;IAC1DZ,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAe,CAAC,CAAC;EACnD;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}