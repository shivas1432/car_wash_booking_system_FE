{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport UserContext from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    userData,\n    loading\n  } = useContext(UserContext);\n  const location = useLocation();\n\n  // Function to check if token is expired\n  const isTokenExpired = () => {\n    const token = localStorage.getItem('token');\n    if (!token) return true;\n    try {\n      // Decode the JWT payload\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      if (!payload.exp) return false;\n\n      // Check if token is expired\n      const expiration = payload.exp * 1000; // Convert seconds to milliseconds\n      return Date.now() >= expiration;\n    } catch (error) {\n      console.error('Error checking token expiration:', error);\n      return true; // Assume expired if there's an error\n    }\n  };\n\n  // Check token expiration on route access\n  useEffect(() => {\n    if (!loading && userData) {\n      if (isTokenExpired()) {\n        console.log('Token expired in protected route');\n        // Logout will be handled by UserContext\n      }\n    }\n  }, [loading, userData]);\n\n  // Show loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If not logged in or token expired, redirect to login\n  if (!userData || isTokenExpired()) {\n    // Save the location they were trying to access\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated, show the protected content\n  return children;\n};\n_s(ProtectedRoute, \"jB0Cm5lgD/f0tTwS3dB8beOqov4=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","useEffect","Navigate","useLocation","UserContext","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","userData","loading","location","isTokenExpired","token","localStorage","getItem","payload","JSON","parse","atob","split","exp","expiration","Date","now","error","console","log","style","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","pathname","replace","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { userData, loading } = useContext(UserContext);\r\n  const location = useLocation();\r\n\r\n  // Function to check if token is expired\r\n  const isTokenExpired = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return true;\r\n    \r\n    try {\r\n      // Decode the JWT payload\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      if (!payload.exp) return false;\r\n      \r\n      // Check if token is expired\r\n      const expiration = payload.exp * 1000; // Convert seconds to milliseconds\r\n      return Date.now() >= expiration;\r\n    } catch (error) {\r\n      console.error('Error checking token expiration:', error);\r\n      return true; // Assume expired if there's an error\r\n    }\r\n  };\r\n\r\n  // Check token expiration on route access\r\n  useEffect(() => {\r\n    if (!loading && userData) {\r\n      if (isTokenExpired()) {\r\n        console.log('Token expired in protected route');\r\n        // Logout will be handled by UserContext\r\n      }\r\n    }\r\n  }, [loading, userData]);\r\n\r\n  // Show loading state\r\n  if (loading) {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <div>Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If not logged in or token expired, redirect to login\r\n  if (!userData || isTokenExpired()) {\r\n    // Save the location they were trying to access\r\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  // User is authenticated, show the protected content\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGX,UAAU,CAACI,WAAW,CAAC;EACrD,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI;MACF;MACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,IAAI,CAACJ,OAAO,CAACK,GAAG,EAAE,OAAO,KAAK;;MAE9B;MACA,MAAMC,UAAU,GAAGN,OAAO,CAACK,GAAG,GAAG,IAAI,CAAC,CAAC;MACvC,OAAOE,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIF,UAAU;IACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,IAAI,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACAzB,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,OAAO,IAAID,QAAQ,EAAE;MACxB,IAAIG,cAAc,CAAC,CAAC,EAAE;QACpBc,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/C;MACF;IACF;EACF,CAAC,EAAE,CAACjB,OAAO,EAAED,QAAQ,CAAC,CAAC;;EAEvB;EACA,IAAIC,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKuB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAzB,QAAA,eAC/FF,OAAA;QAAAE,QAAA,EAAK;MAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEV;;EAEA;EACA,IAAI,CAAC3B,QAAQ,IAAIG,cAAc,CAAC,CAAC,EAAE;IACjC;IACA,oBAAOP,OAAA,CAACJ,QAAQ;MAACoC,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAE5B,QAAQ,CAAC6B;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E;;EAEA;EACA,OAAO7B,QAAQ;AACjB,CAAC;AAACC,EAAA,CAlDIF,cAAc;EAAA,QAEDJ,WAAW;AAAA;AAAAwC,EAAA,GAFxBpC,cAAc;AAoDpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}