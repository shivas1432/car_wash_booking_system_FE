{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\context\\\\UserContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create a Context for the user data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n\n  // Fetch user data from localStorage when the component mounts\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUserData = localStorage.getItem('user');\n    if (token && storedUserData) {\n      // Fetch user data from API if token and user data are present\n      const parsedUserData = JSON.parse(storedUserData);\n      setUserData(parsedUserData);\n\n      // Optionally, you can make an API call to fetch the user data in case it's outdated\n      axios.get('http://localhost:5000/api/user', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        // Update local state with user data from the server if needed\n        if (response.data) {\n          setUserData(response.data);\n          localStorage.setItem('user', JSON.stringify(response.data)); // Save updated user data in localStorage\n        }\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  }, []);\n\n  // Function to update user data and save it to localStorage\n  const setUser = data => {\n    setUserData(data);\n    localStorage.setItem('user', JSON.stringify(data));\n  };\n\n  // Logout function to clear user data from state and localStorage\n  const logout = () => {\n    setUserData(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token'); // Also remove token on logout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userData,\n      setUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Q/bN2hINckB+VINYSZfns3MkAk8=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","userData","setUserData","token","localStorage","getItem","storedUserData","parsedUserData","JSON","parse","get","headers","Authorization","then","response","data","setItem","stringify","catch","error","console","setUser","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/context/UserContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create a Context for the user data\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  // Fetch user data from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUserData = localStorage.getItem('user');\r\n\r\n    if (token && storedUserData) {\r\n      // Fetch user data from API if token and user data are present\r\n      const parsedUserData = JSON.parse(storedUserData);\r\n      setUserData(parsedUserData);\r\n\r\n      // Optionally, you can make an API call to fetch the user data in case it's outdated\r\n      axios\r\n        .get('http://localhost:5000/api/user', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          // Update local state with user data from the server if needed\r\n          if (response.data) {\r\n            setUserData(response.data);\r\n            localStorage.setItem('user', JSON.stringify(response.data)); // Save updated user data in localStorage\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // Function to update user data and save it to localStorage\r\n  const setUser = (data) => {\r\n    setUserData(data);\r\n    localStorage.setItem('user', JSON.stringify(data));\r\n  };\r\n\r\n  // Logout function to clear user data from state and localStorage\r\n  const logout = () => {\r\n    setUserData(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token'); // Also remove token on logout\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData, setUser, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEnD,IAAIF,KAAK,IAAIG,cAAc,EAAE;MAC3B;MACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,cAAc,CAAC;MACjDJ,WAAW,CAACK,cAAc,CAAC;;MAE3B;MACAb,KAAK,CACFgB,GAAG,CAAC,gCAAgC,EAAE;QACrCC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUT,KAAK;QAAG;MAC9C,CAAC,CAAC,CACDU,IAAI,CAACC,QAAQ,IAAI;QAChB;QACA,IAAIA,QAAQ,CAACC,IAAI,EAAE;UACjBb,WAAW,CAACY,QAAQ,CAACC,IAAI,CAAC;UAC1BX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACH,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/D;MACF,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,OAAO,GAAIN,IAAI,IAAK;IACxBb,WAAW,CAACa,IAAI,CAAC;IACjBX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACF,IAAI,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACnBpB,WAAW,CAAC,IAAI,CAAC;IACjBE,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IAC/BnB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,QAAQ;MAAEoB,OAAO;MAAEC;IAAO,CAAE;IAAAvB,QAAA,EACxDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CAjDWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAmDzB,eAAeD,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}