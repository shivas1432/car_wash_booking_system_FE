{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false); // To show loading spinner or disable submit button\n  const [message, setMessage] = useState(''); // To show success or error messages\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset previous messages\n    setMessage('');\n    setError('');\n    if (!email) {\n      setError('Please enter your email');\n      return;\n    }\n    setIsSubmitting(true); // Start the loading process\n\n    try {\n      // Sending the request to the backend to initiate password reset\n      const response = await axios.post('http://localhost:5000/forgot-password', {\n        email\n      });\n      setIsSubmitting(false); // Reset loading state\n      setMessage(response.data.message); // Show success message\n    } catch (error) {\n      setIsSubmitting(false); // Reset loading state\n      if (error.response && error.response.data) {\n        setError(error.response.data.message); // Show error message from backend\n      } else {\n        setError('An error occurred. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Sending Reset Link...' : 'Send Reset Link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"o/k6w+eq1YRhFxku8+/GRa28V7o=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","isSubmitting","setIsSubmitting","message","setMessage","error","setError","handleSubmit","e","preventDefault","response","post","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // To show loading spinner or disable submit button\r\n  const [message, setMessage] = useState(''); // To show success or error messages\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Reset previous messages\r\n    setMessage('');\r\n    setError('');\r\n\r\n    if (!email) {\r\n      setError('Please enter your email');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true); // Start the loading process\r\n\r\n    try {\r\n      // Sending the request to the backend to initiate password reset\r\n      const response = await axios.post('http://localhost:5000/forgot-password', { email });\r\n      setIsSubmitting(false); // Reset loading state\r\n      setMessage(response.data.message); // Show success message\r\n    } catch (error) {\r\n      setIsSubmitting(false); // Reset loading state\r\n      if (error.response && error.response.data) {\r\n        setError(error.response.data.message); // Show error message from backend\r\n      } else {\r\n        setError('An error occurred. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-container\">\r\n      <h2>Forgot Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          {isSubmitting ? 'Sending Reset Link...' : 'Send Reset Link'}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Display success message */}\r\n      {message && <div className=\"success-message\">{message}</div>}\r\n\r\n      {/* Display error message */}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}