{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\context\\\\UserContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n\n  // Load user data from localStorage when app loads\n  useEffect(() => {\n    const storedUserData = localStorage.getItem('user');\n    if (storedUserData) {\n      setUserData(JSON.parse(storedUserData));\n    }\n  }, []);\n\n  // Set user data and store in localStorage\n  const setUser = data => {\n    setUserData(data);\n    localStorage.setItem('user', JSON.stringify(data));\n  };\n\n  // Logout: Remove user data and token from localStorage\n  const logout = () => {\n    setUserData(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token'); // Clear the token too\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userData,\n      setUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Q/bN2hINckB+VINYSZfns3MkAk8=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","userData","setUserData","storedUserData","localStorage","getItem","JSON","parse","setUser","data","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/context/UserContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  // Load user data from localStorage when app loads\r\n  useEffect(() => {\r\n    const storedUserData = localStorage.getItem('user');\r\n    if (storedUserData) {\r\n      setUserData(JSON.parse(storedUserData));\r\n    }\r\n  }, []);\r\n\r\n  // Set user data and store in localStorage\r\n  const setUser = (data) => {\r\n    setUserData(data);\r\n    localStorage.setItem('user', JSON.stringify(data));\r\n  };\r\n\r\n  // Logout: Remove user data and token from localStorage\r\n  const logout = () => {\r\n    setUserData(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token'); // Clear the token too\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData, setUser, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACnD,IAAIF,cAAc,EAAE;MAClBD,WAAW,CAACI,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,OAAO,GAAIC,IAAI,IAAK;IACxBP,WAAW,CAACO,IAAI,CAAC;IACjBL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBV,WAAW,CAAC,IAAI,CAAC;IACjBE,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BT,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,QAAQ;MAAEO,OAAO;MAAEI;IAAO,CAAE;IAAAb,QAAA,EACxDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CA7BWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA+BzB,eAAeD,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}