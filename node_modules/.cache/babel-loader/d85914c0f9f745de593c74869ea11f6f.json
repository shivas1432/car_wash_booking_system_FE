{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\Booking.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"../css/Booking.css\";\nimport UserContext from '../context/UserContext';\nimport { Link } from \"react-router-dom\";\nimport PleaseLogin from \"../components/PleaseLogin\"; // Import PleaseLogin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst services = [/* your services array here */];\nconst timeSlots = [/* your time slots array here */];\nexport default function Booking() {\n  _s();\n  const {\n    userData\n  } = useContext(UserContext);\n  const [selectedCar, setSelectedCar] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedService, setSelectedService] = useState(null);\n  const [selectedSubservice, setSelectedSubservice] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [confirmationDetails, setConfirmationDetails] = useState({});\n  useEffect(() => {\n    var _userData$cars;\n    if ((userData === null || userData === void 0 ? void 0 : (_userData$cars = userData.cars) === null || _userData$cars === void 0 ? void 0 : _userData$cars.length) > 0) {\n      setSelectedCar(userData.cars[0].plate_number);\n    }\n  }, [userData]);\n  const addToCart = (service, subservice) => {\n    const exists = cart.find(item => item.service.name === service.name && item.subservice === subservice);\n    if (!exists) {\n      setCart([...cart, {\n        service,\n        subservice,\n        price: service.price\n      }]);\n    }\n  };\n  const removeFromCart = index => {\n    setCart(cart.filter((_, i) => i !== index));\n  };\n  const totalPrice = cart.reduce((sum, item) => sum + item.price, 0);\n  const convertTo24HourFormat = time => {\n    const [hourMinute, period] = time.split(\" \");\n    let [hour, minute] = hourMinute.split(\":\");\n    if (period === \"PM\" && hour !== \"12\") hour = parseInt(hour) + 12;\n    if (period === \"AM\" && hour === \"12\") hour = 0;\n    return `${String(hour).padStart(2, \"0\")}:${minute}:00`;\n  };\n  const handleBooking = () => {\n    if (!selectedCar || !selectedDate || !selectedService || !selectedSubservice || !selectedTime) {\n      return alert(\"Please complete all selections before booking.\");\n    }\n    const carDetails = userData.cars.find(car => car.plate_number === selectedCar);\n    const formattedTime = convertTo24HourFormat(selectedTime);\n    const bookingData = {\n      user_id: userData.id,\n      customerName: userData.full_name || userData.username,\n      email: userData.email,\n      phone: userData.phone_number,\n      service: selectedService.name,\n      subservice: selectedSubservice,\n      price: selectedService.price,\n      date: selectedDate,\n      timeSlot: formattedTime,\n      carNumber: selectedCar,\n      carModel: carDetails === null || carDetails === void 0 ? void 0 : carDetails.model,\n      carColor: carDetails === null || carDetails === void 0 ? void 0 : carDetails.color,\n      carSeats: carDetails === null || carDetails === void 0 ? void 0 : carDetails.seats\n    };\n    fetch(\"http://localhost:5000/booking/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bookingData)\n    }).then(res => res.json()).then(data => {\n      if (data.bookingId) {\n        setShowConfirmation(true);\n        setConfirmationDetails({\n          bookingId: data.bookingId,\n          car: carDetails,\n          date: selectedDate,\n          time: formattedTime,\n          total: totalPrice\n        });\n        setSelectedCar(null);\n        setSelectedDate(null);\n        setSelectedService(null);\n        setSelectedSubservice(null);\n        setSelectedTime(null);\n        setCart([]);\n      } else {\n        alert(\"Error: Booking failed. Please try again.\");\n      }\n    }).catch(error => {\n      console.error(\"Error booking:\", error);\n      alert(\"There was an error with the booking process.\");\n    });\n  };\n\n  // Check if user is logged in\n  if (!userData || !userData.id) {\n    return /*#__PURE__*/_jsxDEV(PleaseLogin, {\n      message: \"Please login to book a service.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Booking, \"b5dRpHWZSroPAmsJ06sGmChzPMw=\");\n_c = Booking;\nvar _c;\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","Link","PleaseLogin","jsxDEV","_jsxDEV","services","timeSlots","Booking","_s","userData","selectedCar","setSelectedCar","selectedDate","setSelectedDate","selectedService","setSelectedService","selectedSubservice","setSelectedSubservice","cart","setCart","selectedTime","setSelectedTime","showConfirmation","setShowConfirmation","confirmationDetails","setConfirmationDetails","_userData$cars","cars","length","plate_number","addToCart","service","subservice","exists","find","item","name","price","removeFromCart","index","filter","_","i","totalPrice","reduce","sum","convertTo24HourFormat","time","hourMinute","period","split","hour","minute","parseInt","String","padStart","handleBooking","alert","carDetails","car","formattedTime","bookingData","user_id","id","customerName","full_name","username","email","phone","phone_number","date","timeSlot","carNumber","carModel","model","carColor","color","carSeats","seats","fetch","method","headers","body","JSON","stringify","then","res","json","data","bookingId","total","catch","error","console","message","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/Booking.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"../css/Booking.css\";\r\nimport UserContext from '../context/UserContext';\r\nimport { Link } from \"react-router-dom\";\r\nimport PleaseLogin from \"../components/PleaseLogin\"; // Import PleaseLogin\r\n\r\nconst services = [/* your services array here */];\r\nconst timeSlots = [/* your time slots array here */];\r\n\r\nexport default function Booking() {\r\n  const { userData } = useContext(UserContext);\r\n  const [selectedCar, setSelectedCar] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedService, setSelectedService] = useState(null);\r\n  const [selectedSubservice, setSelectedSubservice] = useState(null);\r\n  const [cart, setCart] = useState([]);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [confirmationDetails, setConfirmationDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (userData?.cars?.length > 0) {\r\n      setSelectedCar(userData.cars[0].plate_number);\r\n    }\r\n  }, [userData]);\r\n\r\n  const addToCart = (service, subservice) => {\r\n    const exists = cart.find(item => item.service.name === service.name && item.subservice === subservice);\r\n    if (!exists) {\r\n      setCart([...cart, { service, subservice, price: service.price }]);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (index) => {\r\n    setCart(cart.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const totalPrice = cart.reduce((sum, item) => sum + item.price, 0);\r\n\r\n  const convertTo24HourFormat = (time) => {\r\n    const [hourMinute, period] = time.split(\" \");\r\n    let [hour, minute] = hourMinute.split(\":\");\r\n    if (period === \"PM\" && hour !== \"12\") hour = parseInt(hour) + 12;\r\n    if (period === \"AM\" && hour === \"12\") hour = 0;\r\n    return `${String(hour).padStart(2, \"0\")}:${minute}:00`;\r\n  };\r\n\r\n  const handleBooking = () => {\r\n    if (!selectedCar || !selectedDate || !selectedService || !selectedSubservice || !selectedTime) {\r\n      return alert(\"Please complete all selections before booking.\");\r\n    }\r\n\r\n    const carDetails = userData.cars.find(car => car.plate_number === selectedCar);\r\n    const formattedTime = convertTo24HourFormat(selectedTime);\r\n\r\n    const bookingData = {\r\n      user_id: userData.id,\r\n      customerName: userData.full_name || userData.username,\r\n      email: userData.email,\r\n      phone: userData.phone_number,\r\n      service: selectedService.name,\r\n      subservice: selectedSubservice,\r\n      price: selectedService.price,\r\n      date: selectedDate,\r\n      timeSlot: formattedTime,\r\n      carNumber: selectedCar,\r\n      carModel: carDetails?.model,\r\n      carColor: carDetails?.color,\r\n      carSeats: carDetails?.seats,\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/booking/create\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(bookingData),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.bookingId) {\r\n          setShowConfirmation(true);\r\n          setConfirmationDetails({\r\n            bookingId: data.bookingId,\r\n            car: carDetails,\r\n            date: selectedDate,\r\n            time: formattedTime,\r\n            total: totalPrice,\r\n          });\r\n\r\n          setSelectedCar(null);\r\n          setSelectedDate(null);\r\n          setSelectedService(null);\r\n          setSelectedSubservice(null);\r\n          setSelectedTime(null);\r\n          setCart([]);\r\n        } else {\r\n          alert(\"Error: Booking failed. Please try again.\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error booking:\", error);\r\n        alert(\"There was an error with the booking process.\");\r\n      });\r\n  };\r\n\r\n  // Check if user is logged in\r\n  if (!userData || !userData.id) {\r\n    return <PleaseLogin message=\"Please login to book a service.\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"booking-container\">\r\n      {/* rest of your booking page content */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}