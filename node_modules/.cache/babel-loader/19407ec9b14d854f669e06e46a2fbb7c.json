{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport GoogleLogin from './GoogleLogin';\nimport ForgotPassword from './ForgotPassword';\nimport \"../css/auth.css\";\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport { useContext } from 'react';\nimport UserContext from '../context/UserContext'; // Import the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate(); // Create navigate function to redirect\n\n  const {\n    setUser\n  } = useContext(UserContext); // Access setUser function from context\n\n  // Handle Login Submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Normalize email/username (lowercase) before sending request to server\n    const data = {\n      username: username.toLowerCase(),\n      password\n    }; // Ensure email or username is lowercase\n\n    try {\n      const response = await axios.post('http://localhost:5000/login', data, {\n        withCredentials: true\n      }); // Ensure withCredentials is set to true\n\n      // Assuming the backend returns the token and user data\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store the token in localStorage (or sessionStorage)\n      localStorage.setItem('token', token);\n\n      // Store user data in context (this will propagate user data across the app)\n      setUser(user);\n\n      // Redirect to homepage after successful login\n      navigate('/');\n    } catch (error) {\n      console.error('Error logging in', error);\n      setErrorMessage('Login failed. Please check your credentials and try again.');\n    }\n  };\n\n  // Handle Forgot Password Submit\n  const handleForgotPasswordSubmit = async email => {\n    setIsSubmitting(true);\n    try {\n      const response = await axios.post('http://localhost:5000/forgot-password', {\n        email\n      });\n      alert(response.data.message);\n      setIsForgotPassword(false); // Hide forgot password form after submission\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error sending reset email', error);\n      alert('Error: ' + ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Unknown error');\n    }\n    setIsSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }, this), !isForgotPassword ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Fullname or Email\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"auth-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password-link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setIsForgotPassword(true),\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-link\",\n          children: [\"Don\\u2019t have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"Register!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ForgotPassword, {\n        onSubmit: handleForgotPasswordSubmit,\n        isSubmitting: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"2EOVNDUyyLO4BFKWM81+y/kdBwA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","GoogleLogin","ForgotPassword","useNavigate","useContext","UserContext","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","isForgotPassword","setIsForgotPassword","isSubmitting","setIsSubmitting","errorMessage","setErrorMessage","navigate","setUser","handleSubmit","e","preventDefault","data","toLowerCase","response","post","withCredentials","token","user","localStorage","setItem","error","console","handleForgotPasswordSubmit","email","alert","message","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport GoogleLogin from './GoogleLogin';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport \"../css/auth.css\";\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\nimport { useContext } from 'react';\r\nimport UserContext from '../context/UserContext'; // Import the context\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate(); // Create navigate function to redirect\r\n\r\n  const { setUser } = useContext(UserContext);  // Access setUser function from context\r\n\r\n  // Handle Login Submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Normalize email/username (lowercase) before sending request to server\r\n    const data = { username: username.toLowerCase(), password }; // Ensure email or username is lowercase\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/login', data, { withCredentials: true }); // Ensure withCredentials is set to true\r\n\r\n      // Assuming the backend returns the token and user data\r\n      const { token, user } = response.data;\r\n      \r\n      // Store the token in localStorage (or sessionStorage)\r\n      localStorage.setItem('token', token);\r\n\r\n      // Store user data in context (this will propagate user data across the app)\r\n      setUser(user);\r\n\r\n      // Redirect to homepage after successful login\r\n      navigate('/'); \r\n    } catch (error) {\r\n      console.error('Error logging in', error);\r\n      setErrorMessage('Login failed. Please check your credentials and try again.');\r\n    }\r\n  };\r\n\r\n  // Handle Forgot Password Submit\r\n  const handleForgotPasswordSubmit = async (email) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/forgot-password', { email });\r\n      alert(response.data.message);\r\n      setIsForgotPassword(false); // Hide forgot password form after submission\r\n    } catch (error) {\r\n      console.error('Error sending reset email', error);\r\n      alert('Error: ' + error.response?.data?.message || 'Unknown error');\r\n    }\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <div className=\"auth-form\">\r\n        <h2>Login</h2>\r\n\r\n        {/* Show error message if there's an error */}\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n        {!isForgotPassword ? (\r\n          <form onSubmit={handleSubmit} className=\"login-form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Fullname or Email\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"auth-input\"\r\n            />\r\n            <button type=\"submit\" className=\"auth-btn\" disabled={isSubmitting}>\r\n              {isSubmitting ? 'Logging in...' : 'Login'}\r\n            </button>\r\n            <p className=\"forgot-password-link\">\r\n              <a href=\"#\" onClick={() => setIsForgotPassword(true)}>Forgot Password?</a>\r\n            </p>\r\n            <p className=\"register-link\">\r\n              Don’t have an account? <a href=\"/register\">Register!</a>\r\n            </p>\r\n          </form>\r\n        ) : (\r\n          <ForgotPassword onSubmit={handleForgotPasswordSubmit} isSubmitting={isSubmitting} />\r\n        )}\r\n\r\n        {/* Google Login component */}\r\n        <GoogleLogin />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}