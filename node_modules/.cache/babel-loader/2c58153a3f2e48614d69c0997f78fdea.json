{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\Booking.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserContext from '../context/UserContext';\nimport axios from 'axios';\nimport '../css/Booking.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Booking() {\n  _s();\n  var _getSelectedService, _getSelectedService2, _userData$cars$find, _userData$cars$find2;\n  const {\n    userData,\n    refreshUserData\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  // Form state\n  const [formData, setFormData] = useState({\n    service_type: '',\n    car_id: '',\n    booking_date: '',\n    booking_time: '',\n    special_requests: ''\n  });\n\n  // Component state\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [availableTimes, setAvailableTimes] = useState([]);\n\n  // Service types and their prices\n  const serviceTypes = [{\n    id: 'basic',\n    name: 'Basic Wash',\n    price: 20,\n    description: 'Exterior wash with basic cleaning'\n  }, {\n    id: 'deluxe',\n    name: 'Deluxe Wash',\n    price: 35,\n    description: 'Exterior wash with interior vacuum and dashboard cleaning'\n  }, {\n    id: 'premium',\n    name: 'Premium Detailing',\n    price: 75,\n    description: 'Full exterior and interior detailing with wax and polish'\n  }, {\n    id: 'engine',\n    name: 'Engine Cleaning',\n    price: 50,\n    description: 'Thorough engine bay cleaning'\n  }];\n\n  // Time slots\n  const timeSlots = ['09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00'];\n\n  // Generate available dates (next 14 days, excluding past dates)\n  const getAvailableDates = () => {\n    const dates = [];\n    const today = new Date();\n    for (let i = 0; i < 14; i++) {\n      const date = new Date();\n      date.setDate(today.getDate() + i);\n\n      // Skip dates in the past\n      if (date < today) continue;\n\n      // Format as YYYY-MM-DD for input value\n      const formattedDate = date.toISOString().split('T')[0];\n      dates.push(formattedDate);\n    }\n    return dates;\n  };\n\n  // Load available times for selected date\n  useEffect(() => {\n    const fetchAvailableTimes = async () => {\n      if (!formData.booking_date) {\n        setAvailableTimes(timeSlots);\n        return;\n      }\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`/booking/available-times?date=${formData.booking_date}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // If endpoint returns available times, use them\n        if (response.data && Array.isArray(response.data)) {\n          setAvailableTimes(response.data);\n        } else {\n          // Otherwise use all time slots (fallback)\n          setAvailableTimes(timeSlots);\n        }\n      } catch (err) {\n        console.error('Error fetching available times:', err);\n        // Fallback to all time slots on error\n        setAvailableTimes(timeSlots);\n      }\n    };\n    fetchAvailableTimes();\n  }, [formData.booking_date]);\n\n  // Handle form input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Clear time when date changes\n    if (name === 'booking_date') {\n      setFormData(prev => ({\n        ...prev,\n        booking_time: ''\n      }));\n    }\n\n    // Clear any previous error/success messages\n    setError('');\n    setSuccess('');\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation\n    if (!formData.service_type) {\n      setError('Please select a service type');\n      return;\n    }\n    if (!formData.car_id) {\n      setError('Please select a car');\n      return;\n    }\n    if (!formData.booking_date) {\n      setError('Please select a date');\n      return;\n    }\n    if (!formData.booking_time) {\n      setError('Please select a time');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('/booking', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess('Booking created successfully! You earned 5 loyalty points.');\n\n      // Refresh user data to update bookings & points\n      if (refreshUserData) {\n        await refreshUserData();\n      }\n\n      // Reset form\n      setFormData({\n        service_type: '',\n        car_id: '',\n        booking_date: '',\n        booking_time: '',\n        special_requests: ''\n      });\n\n      // Redirect to My Bookings page after 2 seconds\n      setTimeout(() => {\n        navigate('/my-bookings');\n      }, 2000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error creating booking:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create booking. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get selected service details\n  const getSelectedService = () => {\n    return serviceTypes.find(service => service.id === formData.service_type) || null;\n  };\n\n  // If user is not logged in or userData not loaded yet\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-container loading\",\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If user has no cars, prompt to add cars first\n  if (!userData.cars || userData.cars.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-container no-cars\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Car Registration Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You need to register at least one car before booking a service.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-car-button\",\n        onClick: () => navigate('/profile'),\n        children: \"Add a Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book a Car Wash Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-loading\",\n      children: \"Processing your booking...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"booking-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-options\",\n          children: serviceTypes.map(service => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `service-option ${formData.service_type === service.id ? 'selected' : ''}`,\n            onClick: () => handleChange({\n              target: {\n                name: 'service_type',\n                value: service.id\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-name\",\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-price\",\n              children: [\"$\", service.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-description\",\n              children: service.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, service.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Your Car\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"car-options\",\n          children: userData.cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `car-option ${formData.car_id === car.id ? 'selected' : ''}`,\n            onClick: () => handleChange({\n              target: {\n                name: 'car_id',\n                value: car.id\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"car-model\",\n              children: car.model\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"car-plate\",\n              children: car.plate_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"car-color\",\n              children: car.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, car.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section date-time-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Date & Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"booking_date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"booking_date\",\n            name: \"booking_date\",\n            value: formData.booking_date,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), getAvailableDates().map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: new Date(date).toLocaleDateString('en-US', {\n                weekday: 'short',\n                year: 'numeric',\n                month: 'short',\n                day: 'numeric'\n              })\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"booking_time\",\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"booking_time\",\n            name: \"booking_time\",\n            value: formData.booking_time,\n            onChange: handleChange,\n            required: true,\n            disabled: !formData.booking_date,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: time,\n              children: time\n            }, time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Special Requests (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"special_requests\",\n          value: formData.special_requests,\n          onChange: handleChange,\n          placeholder: \"Any special requests or instructions for our team...\",\n          maxLength: 500,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), formData.service_type && formData.car_id && formData.booking_date && formData.booking_time && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Booking Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Service:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 18\n            }, this), \" \", (_getSelectedService = getSelectedService()) === null || _getSelectedService === void 0 ? void 0 : _getSelectedService.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 18\n            }, this), \" $\", (_getSelectedService2 = getSelectedService()) === null || _getSelectedService2 === void 0 ? void 0 : _getSelectedService2.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Car:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 18\n            }, this), \" \", (_userData$cars$find = userData.cars.find(car => car.id === formData.car_id)) === null || _userData$cars$find === void 0 ? void 0 : _userData$cars$find.model, \" (\", (_userData$cars$find2 = userData.cars.find(car => car.id === formData.car_id)) === null || _userData$cars$find2 === void 0 ? void 0 : _userData$cars$find2.plate_number, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 18\n            }, this), \" \", new Date(formData.booking_date).toLocaleDateString('en-US', {\n              weekday: 'long',\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 18\n            }, this), \" \", formData.booking_time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), formData.special_requests && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Special Requests:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 20\n            }, this), \" \", formData.special_requests]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"booking-submit-button\",\n        disabled: loading || !formData.service_type || !formData.car_id || !formData.booking_date || !formData.booking_time,\n        children: loading ? 'Processing...' : 'Confirm Booking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(Booking, \"p04OqCKkSMi501momcCx0pQVwFg=\", false, function () {\n  return [useNavigate];\n});\n_c = Booking;\nvar _c;\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","UserContext","axios","jsxDEV","_jsxDEV","Booking","_s","_getSelectedService","_getSelectedService2","_userData$cars$find","_userData$cars$find2","userData","refreshUserData","navigate","formData","setFormData","service_type","car_id","booking_date","booking_time","special_requests","loading","setLoading","error","setError","success","setSuccess","availableTimes","setAvailableTimes","serviceTypes","id","name","price","description","timeSlots","getAvailableDates","dates","today","Date","i","date","setDate","getDate","formattedDate","toISOString","split","push","fetchAvailableTimes","token","localStorage","getItem","response","get","headers","Authorization","data","Array","isArray","err","console","handleChange","e","value","target","prev","handleSubmit","preventDefault","post","setTimeout","_err$response","_err$response$data","message","getSelectedService","find","service","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cars","length","onClick","onSubmit","map","car","model","plate_number","color","htmlFor","onChange","required","toLocaleDateString","weekday","year","month","day","disabled","time","placeholder","maxLength","rows","type","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/Booking.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\nimport axios from 'axios';\r\nimport '../css/Booking.css';\r\n\r\nexport default function Booking() {\r\n  const { userData, refreshUserData } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n  \r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    service_type: '',\r\n    car_id: '',\r\n    booking_date: '',\r\n    booking_time: '',\r\n    special_requests: ''\r\n  });\r\n  \r\n  // Component state\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  \r\n  // Service types and their prices\r\n  const serviceTypes = [\r\n    { id: 'basic', name: 'Basic Wash', price: 20, description: 'Exterior wash with basic cleaning' },\r\n    { id: 'deluxe', name: 'Deluxe Wash', price: 35, description: 'Exterior wash with interior vacuum and dashboard cleaning' },\r\n    { id: 'premium', name: 'Premium Detailing', price: 75, description: 'Full exterior and interior detailing with wax and polish' },\r\n    { id: 'engine', name: 'Engine Cleaning', price: 50, description: 'Thorough engine bay cleaning' }\r\n  ];\r\n\r\n  // Time slots\r\n  const timeSlots = [\r\n    '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00'\r\n  ];\r\n\r\n  // Generate available dates (next 14 days, excluding past dates)\r\n  const getAvailableDates = () => {\r\n    const dates = [];\r\n    const today = new Date();\r\n    \r\n    for (let i = 0; i < 14; i++) {\r\n      const date = new Date();\r\n      date.setDate(today.getDate() + i);\r\n      \r\n      // Skip dates in the past\r\n      if (date < today) continue;\r\n      \r\n      // Format as YYYY-MM-DD for input value\r\n      const formattedDate = date.toISOString().split('T')[0];\r\n      dates.push(formattedDate);\r\n    }\r\n    \r\n    return dates;\r\n  };\r\n\r\n  // Load available times for selected date\r\n  useEffect(() => {\r\n    const fetchAvailableTimes = async () => {\r\n      if (!formData.booking_date) {\r\n        setAvailableTimes(timeSlots);\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`/booking/available-times?date=${formData.booking_date}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        // If endpoint returns available times, use them\r\n        if (response.data && Array.isArray(response.data)) {\r\n          setAvailableTimes(response.data);\r\n        } else {\r\n          // Otherwise use all time slots (fallback)\r\n          setAvailableTimes(timeSlots);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching available times:', err);\r\n        // Fallback to all time slots on error\r\n        setAvailableTimes(timeSlots);\r\n      }\r\n    };\r\n    \r\n    fetchAvailableTimes();\r\n  }, [formData.booking_date]);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    \r\n    // Clear time when date changes\r\n    if (name === 'booking_date') {\r\n      setFormData(prev => ({ ...prev, booking_time: '' }));\r\n    }\r\n    \r\n    // Clear any previous error/success messages\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validation\r\n    if (!formData.service_type) {\r\n      setError('Please select a service type');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.car_id) {\r\n      setError('Please select a car');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.booking_date) {\r\n      setError('Please select a date');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.booking_time) {\r\n      setError('Please select a time');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        '/booking',\r\n        formData,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      setSuccess('Booking created successfully! You earned 5 loyalty points.');\r\n      \r\n      // Refresh user data to update bookings & points\r\n      if (refreshUserData) {\r\n        await refreshUserData();\r\n      }\r\n      \r\n      // Reset form\r\n      setFormData({\r\n        service_type: '',\r\n        car_id: '',\r\n        booking_date: '',\r\n        booking_time: '',\r\n        special_requests: ''\r\n      });\r\n      \r\n      // Redirect to My Bookings page after 2 seconds\r\n      setTimeout(() => {\r\n        navigate('/my-bookings');\r\n      }, 2000);\r\n      \r\n    } catch (err) {\r\n      console.error('Error creating booking:', err);\r\n      setError(err.response?.data?.message || 'Failed to create booking. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Get selected service details\r\n  const getSelectedService = () => {\r\n    return serviceTypes.find(service => service.id === formData.service_type) || null;\r\n  };\r\n\r\n  // If user is not logged in or userData not loaded yet\r\n  if (!userData) {\r\n    return <div className=\"booking-container loading\">Loading user data...</div>;\r\n  }\r\n\r\n  // If user has no cars, prompt to add cars first\r\n  if (!userData.cars || userData.cars.length === 0) {\r\n    return (\r\n      <div className=\"booking-container no-cars\">\r\n        <h2>Car Registration Required</h2>\r\n        <p>You need to register at least one car before booking a service.</p>\r\n        <button \r\n          className=\"add-car-button\"\r\n          onClick={() => navigate('/profile')}\r\n        >\r\n          Add a Car\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"booking-container\">\r\n      <h2>Book a Car Wash Service</h2>\r\n      \r\n      {/* Error and success messages */}\r\n      {error && <div className=\"booking-error\">{error}</div>}\r\n      {success && <div className=\"booking-success\">{success}</div>}\r\n      {loading && <div className=\"booking-loading\">Processing your booking...</div>}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"booking-form\">\r\n        {/* Service Type Selection */}\r\n        <div className=\"form-section\">\r\n          <h3>Select Service</h3>\r\n          <div className=\"service-options\">\r\n            {serviceTypes.map((service) => (\r\n              <div \r\n                key={service.id}\r\n                className={`service-option ${formData.service_type === service.id ? 'selected' : ''}`}\r\n                onClick={() => handleChange({ target: { name: 'service_type', value: service.id } })}\r\n              >\r\n                <div className=\"service-name\">{service.name}</div>\r\n                <div className=\"service-price\">${service.price}</div>\r\n                <div className=\"service-description\">{service.description}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Car Selection */}\r\n        <div className=\"form-section\">\r\n          <h3>Select Your Car</h3>\r\n          <div className=\"car-options\">\r\n            {userData.cars.map((car) => (\r\n              <div \r\n                key={car.id}\r\n                className={`car-option ${formData.car_id === car.id ? 'selected' : ''}`}\r\n                onClick={() => handleChange({ target: { name: 'car_id', value: car.id } })}\r\n              >\r\n                <div className=\"car-model\">{car.model}</div>\r\n                <div className=\"car-plate\">{car.plate_number}</div>\r\n                <div className=\"car-color\">{car.color}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Date & Time Selection */}\r\n        <div className=\"form-section date-time-section\">\r\n          <h3>Select Date & Time</h3>\r\n          <div className=\"date-selection\">\r\n            <label htmlFor=\"booking_date\">Date:</label>\r\n            <select \r\n              id=\"booking_date\"\r\n              name=\"booking_date\"\r\n              value={formData.booking_date}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select a date</option>\r\n              {getAvailableDates().map(date => (\r\n                <option key={date} value={date}>\r\n                  {new Date(date).toLocaleDateString('en-US', { \r\n                    weekday: 'short', \r\n                    year: 'numeric', \r\n                    month: 'short', \r\n                    day: 'numeric' \r\n                  })}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"time-selection\">\r\n            <label htmlFor=\"booking_time\">Time:</label>\r\n            <select \r\n              id=\"booking_time\"\r\n              name=\"booking_time\"\r\n              value={formData.booking_time}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={!formData.booking_date}\r\n            >\r\n              <option value=\"\">Select a time</option>\r\n              {availableTimes.map(time => (\r\n                <option key={time} value={time}>{time}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Special Requests */}\r\n        <div className=\"form-section\">\r\n          <h3>Special Requests (Optional)</h3>\r\n          <textarea\r\n            name=\"special_requests\"\r\n            value={formData.special_requests}\r\n            onChange={handleChange}\r\n            placeholder=\"Any special requests or instructions for our team...\"\r\n            maxLength={500}\r\n            rows={4}\r\n          />\r\n        </div>\r\n        \r\n        {/* Booking Summary */}\r\n        {formData.service_type && formData.car_id && formData.booking_date && formData.booking_time && (\r\n          <div className=\"booking-summary\">\r\n            <h3>Booking Summary</h3>\r\n            <div className=\"summary-details\">\r\n              <p><strong>Service:</strong> {getSelectedService()?.name}</p>\r\n              <p><strong>Price:</strong> ${getSelectedService()?.price}</p>\r\n              \r\n              <p><strong>Car:</strong> {userData.cars.find(car => car.id === formData.car_id)?.model} ({userData.cars.find(car => car.id === formData.car_id)?.plate_number})</p>\r\n              \r\n              <p><strong>Date:</strong> {new Date(formData.booking_date).toLocaleDateString('en-US', { \r\n                weekday: 'long', \r\n                year: 'numeric', \r\n                month: 'long', \r\n                day: 'numeric' \r\n              })}</p>\r\n              \r\n              <p><strong>Time:</strong> {formData.booking_time}</p>\r\n              \r\n              {formData.special_requests && (\r\n                <p><strong>Special Requests:</strong> {formData.special_requests}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Submit Button */}\r\n        <button \r\n          type=\"submit\" \r\n          className=\"booking-submit-button\"\r\n          disabled={loading || !formData.service_type || !formData.car_id || !formData.booking_date || !formData.booking_time}\r\n        >\r\n          {loading ? 'Processing...' : 'Confirm Booking'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,mBAAA,EAAAC,oBAAA,EAAAC,mBAAA,EAAAC,oBAAA;EAChC,MAAM;IAAEC,QAAQ;IAAEC;EAAgB,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAC7D,MAAMY,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IACvCmB,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMgC,YAAY,GAAG,CACnB;IAAEC,EAAE,EAAE,OAAO;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAoC,CAAC,EAChG;IAAEH,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAA4D,CAAC,EAC1H;IAAEH,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAA2D,CAAC,EAChI;IAAEH,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAA+B,CAAC,CAClG;;EAED;EACA,MAAMC,SAAS,GAAG,CAChB,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAChF;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,IAAI,GAAG,IAAIF,IAAI,CAAC,CAAC;MACvBE,IAAI,CAACC,OAAO,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;;MAEjC;MACA,IAAIC,IAAI,GAAGH,KAAK,EAAE;;MAElB;MACA,MAAMM,aAAa,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtDT,KAAK,CAACU,IAAI,CAACH,aAAa,CAAC;IAC3B;IAEA,OAAOP,KAAK;EACd,CAAC;;EAED;EACAtC,SAAS,CAAC,MAAM;IACd,MAAMiD,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI,CAACjC,QAAQ,CAACI,YAAY,EAAE;QAC1BU,iBAAiB,CAACM,SAAS,CAAC;QAC5B;MACF;MAEA,IAAI;QACF,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,GAAG,CAAC,iCAAiCtC,QAAQ,CAACI,YAAY,EAAE,EAAE;UACzFmC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;;QAEF;QACA,IAAIG,QAAQ,CAACI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAAC,EAAE;UACjD3B,iBAAiB,CAACuB,QAAQ,CAACI,IAAI,CAAC;QAClC,CAAC,MAAM;UACL;UACA3B,iBAAiB,CAACM,SAAS,CAAC;QAC9B;MACF,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACZC,OAAO,CAACpC,KAAK,CAAC,iCAAiC,EAAEmC,GAAG,CAAC;QACrD;QACA9B,iBAAiB,CAACM,SAAS,CAAC;MAC9B;IACF,CAAC;IAEDa,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACjC,QAAQ,CAACI,YAAY,CAAC,CAAC;;EAE3B;EACA,MAAM0C,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAE9B,IAAI;MAAE+B;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChChD,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACiB,IAAI,GAAG+B;IAAM,CAAC,CAAC;;IAE3C;IACA,IAAI/B,IAAI,KAAK,cAAc,EAAE;MAC3BhB,WAAW,CAACiD,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE7C,YAAY,EAAE;MAAG,CAAC,CAAC,CAAC;IACtD;;IAEA;IACAK,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;;EAED;EACA,MAAMuC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACpD,QAAQ,CAACE,YAAY,EAAE;MAC1BQ,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEA,IAAI,CAACV,QAAQ,CAACG,MAAM,EAAE;MACpBO,QAAQ,CAAC,qBAAqB,CAAC;MAC/B;IACF;IAEA,IAAI,CAACV,QAAQ,CAACI,YAAY,EAAE;MAC1BM,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEA,IAAI,CAACV,QAAQ,CAACK,YAAY,EAAE;MAC1BK,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMwB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMjD,KAAK,CAACiE,IAAI,CAC/B,UAAU,EACVrD,QAAQ,EACR;QAAEuC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAAE,CAClD,CAAC;MAEDtB,UAAU,CAAC,4DAA4D,CAAC;;MAExE;MACA,IAAId,eAAe,EAAE;QACnB,MAAMA,eAAe,CAAC,CAAC;MACzB;;MAEA;MACAG,WAAW,CAAC;QACVC,YAAY,EAAE,EAAE;QAChBC,MAAM,EAAE,EAAE;QACVC,YAAY,EAAE,EAAE;QAChBC,YAAY,EAAE,EAAE;QAChBC,gBAAgB,EAAE;MACpB,CAAC,CAAC;;MAEF;MACAgD,UAAU,CAAC,MAAM;QACfvD,QAAQ,CAAC,cAAc,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAO6C,GAAG,EAAE;MAAA,IAAAW,aAAA,EAAAC,kBAAA;MACZX,OAAO,CAACpC,KAAK,CAAC,yBAAyB,EAAEmC,GAAG,CAAC;MAC7ClC,QAAQ,CAAC,EAAA6C,aAAA,GAAAX,GAAG,CAACP,QAAQ,cAAAkB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcd,IAAI,cAAAe,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,6CAA6C,CAAC;IACxF,CAAC,SAAS;MACRjD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMkD,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,OAAO3C,YAAY,CAAC4C,IAAI,CAACC,OAAO,IAAIA,OAAO,CAAC5C,EAAE,KAAKhB,QAAQ,CAACE,YAAY,CAAC,IAAI,IAAI;EACnF,CAAC;;EAED;EACA,IAAI,CAACL,QAAQ,EAAE;IACb,oBAAOP,OAAA;MAAKuE,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9E;;EAEA;EACA,IAAI,CAACrE,QAAQ,CAACsE,IAAI,IAAItE,QAAQ,CAACsE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAChD,oBACE9E,OAAA;MAAKuE,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCxE,OAAA;QAAAwE,QAAA,EAAI;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC5E,OAAA;QAAAwE,QAAA,EAAG;MAA+D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtE5E,OAAA;QACEuE,SAAS,EAAC,gBAAgB;QAC1BQ,OAAO,EAAEA,CAAA,KAAMtE,QAAQ,CAAC,UAAU,CAAE;QAAA+D,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACE5E,OAAA;IAAKuE,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCxE,OAAA;MAAAwE,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG/BzD,KAAK,iBAAInB,OAAA;MAAKuE,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErD;IAAK;MAAAsD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrDvD,OAAO,iBAAIrB,OAAA;MAAKuE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEnD;IAAO;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3D3D,OAAO,iBAAIjB,OAAA;MAAKuE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7E5E,OAAA;MAAMgF,QAAQ,EAAEnB,YAAa;MAACU,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAEpDxE,OAAA;QAAKuE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxE,OAAA;UAAAwE,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB5E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7B/C,YAAY,CAACwD,GAAG,CAAEX,OAAO,iBACxBtE,OAAA;YAEEuE,SAAS,EAAE,kBAAkB7D,QAAQ,CAACE,YAAY,KAAK0D,OAAO,CAAC5C,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;YACtFqD,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC;cAAEG,MAAM,EAAE;gBAAEhC,IAAI,EAAE,cAAc;gBAAE+B,KAAK,EAAEY,OAAO,CAAC5C;cAAG;YAAE,CAAC,CAAE;YAAA8C,QAAA,gBAErFxE,OAAA;cAAKuE,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEF,OAAO,CAAC3C;YAAI;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClD5E,OAAA;cAAKuE,SAAS,EAAC,eAAe;cAAAC,QAAA,GAAC,GAAC,EAACF,OAAO,CAAC1C,KAAK;YAAA;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrD5E,OAAA;cAAKuE,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAEF,OAAO,CAACzC;YAAW;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAN3DN,OAAO,CAAC5C,EAAE;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOZ,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxE,OAAA;UAAAwE,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5E,OAAA;UAAKuE,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBjE,QAAQ,CAACsE,IAAI,CAACI,GAAG,CAAEC,GAAG,iBACrBlF,OAAA;YAEEuE,SAAS,EAAE,cAAc7D,QAAQ,CAACG,MAAM,KAAKqE,GAAG,CAACxD,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;YACxEqD,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAAC;cAAEG,MAAM,EAAE;gBAAEhC,IAAI,EAAE,QAAQ;gBAAE+B,KAAK,EAAEwB,GAAG,CAACxD;cAAG;YAAE,CAAC,CAAE;YAAA8C,QAAA,gBAE3ExE,OAAA;cAAKuE,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEU,GAAG,CAACC;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5C5E,OAAA;cAAKuE,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEU,GAAG,CAACE;YAAY;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnD5E,OAAA;cAAKuE,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEU,GAAG,CAACG;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GANvCM,GAAG,CAACxD,EAAE;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOR,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CxE,OAAA;UAAAwE,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3B5E,OAAA;UAAKuE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BxE,OAAA;YAAOsF,OAAO,EAAC,cAAc;YAAAd,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3C5E,OAAA;YACE0B,EAAE,EAAC,cAAc;YACjBC,IAAI,EAAC,cAAc;YACnB+B,KAAK,EAAEhD,QAAQ,CAACI,YAAa;YAC7ByE,QAAQ,EAAE/B,YAAa;YACvBgC,QAAQ;YAAAhB,QAAA,gBAERxE,OAAA;cAAQ0D,KAAK,EAAC,EAAE;cAAAc,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtC7C,iBAAiB,CAAC,CAAC,CAACkD,GAAG,CAAC7C,IAAI,iBAC3BpC,OAAA;cAAmB0D,KAAK,EAAEtB,IAAK;cAAAoC,QAAA,EAC5B,IAAItC,IAAI,CAACE,IAAI,CAAC,CAACqD,kBAAkB,CAAC,OAAO,EAAE;gBAC1CC,OAAO,EAAE,OAAO;gBAChBC,IAAI,EAAE,SAAS;gBACfC,KAAK,EAAE,OAAO;gBACdC,GAAG,EAAE;cACP,CAAC;YAAC,GANSzD,IAAI;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOT,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN5E,OAAA;UAAKuE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BxE,OAAA;YAAOsF,OAAO,EAAC,cAAc;YAAAd,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3C5E,OAAA;YACE0B,EAAE,EAAC,cAAc;YACjBC,IAAI,EAAC,cAAc;YACnB+B,KAAK,EAAEhD,QAAQ,CAACK,YAAa;YAC7BwE,QAAQ,EAAE/B,YAAa;YACvBgC,QAAQ;YACRM,QAAQ,EAAE,CAACpF,QAAQ,CAACI,YAAa;YAAA0D,QAAA,gBAEjCxE,OAAA;cAAQ0D,KAAK,EAAC,EAAE;cAAAc,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtCrD,cAAc,CAAC0D,GAAG,CAACc,IAAI,iBACtB/F,OAAA;cAAmB0D,KAAK,EAAEqC,IAAK;cAAAvB,QAAA,EAAEuB;YAAI,GAAxBA,IAAI;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA6B,CAC/C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxE,OAAA;UAAAwE,QAAA,EAAI;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpC5E,OAAA;UACE2B,IAAI,EAAC,kBAAkB;UACvB+B,KAAK,EAAEhD,QAAQ,CAACM,gBAAiB;UACjCuE,QAAQ,EAAE/B,YAAa;UACvBwC,WAAW,EAAC,sDAAsD;UAClEC,SAAS,EAAE,GAAI;UACfC,IAAI,EAAE;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLlE,QAAQ,CAACE,YAAY,IAAIF,QAAQ,CAACG,MAAM,IAAIH,QAAQ,CAACI,YAAY,IAAIJ,QAAQ,CAACK,YAAY,iBACzFf,OAAA;QAAKuE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BxE,OAAA;UAAAwE,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB5E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BxE,OAAA;YAAAwE,QAAA,gBAAGxE,OAAA;cAAAwE,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,GAAAzE,mBAAA,GAACiE,kBAAkB,CAAC,CAAC,cAAAjE,mBAAA,uBAApBA,mBAAA,CAAsBwB,IAAI;UAAA;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7D5E,OAAA;YAAAwE,QAAA,gBAAGxE,OAAA;cAAAwE,QAAA,EAAQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,MAAE,GAAAxE,oBAAA,GAACgE,kBAAkB,CAAC,CAAC,cAAAhE,oBAAA,uBAApBA,oBAAA,CAAsBwB,KAAK;UAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE7D5E,OAAA;YAAAwE,QAAA,gBAAGxE,OAAA;cAAAwE,QAAA,EAAQ;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,GAAAvE,mBAAA,GAACE,QAAQ,CAACsE,IAAI,CAACR,IAAI,CAACa,GAAG,IAAIA,GAAG,CAACxD,EAAE,KAAKhB,QAAQ,CAACG,MAAM,CAAC,cAAAR,mBAAA,uBAArDA,mBAAA,CAAuD8E,KAAK,EAAC,IAAE,GAAA7E,oBAAA,GAACC,QAAQ,CAACsE,IAAI,CAACR,IAAI,CAACa,GAAG,IAAIA,GAAG,CAACxD,EAAE,KAAKhB,QAAQ,CAACG,MAAM,CAAC,cAAAP,oBAAA,uBAArDA,oBAAA,CAAuD8E,YAAY,EAAC,GAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEnK5E,OAAA;YAAAwE,QAAA,gBAAGxE,OAAA;cAAAwE,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC,IAAI1C,IAAI,CAACxB,QAAQ,CAACI,YAAY,CAAC,CAAC2E,kBAAkB,CAAC,OAAO,EAAE;cACrFC,OAAO,EAAE,MAAM;cACfC,IAAI,EAAE,SAAS;cACfC,KAAK,EAAE,MAAM;cACbC,GAAG,EAAE;YACP,CAAC,CAAC;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEP5E,OAAA;YAAAwE,QAAA,gBAAGxE,OAAA;cAAAwE,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAClE,QAAQ,CAACK,YAAY;UAAA;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAEpDlE,QAAQ,CAACM,gBAAgB,iBACxBhB,OAAA;YAAAwE,QAAA,gBAAGxE,OAAA;cAAAwE,QAAA,EAAQ;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAClE,QAAQ,CAACM,gBAAgB;UAAA;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACrE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGD5E,OAAA;QACEmG,IAAI,EAAC,QAAQ;QACb5B,SAAS,EAAC,uBAAuB;QACjCuB,QAAQ,EAAE7E,OAAO,IAAI,CAACP,QAAQ,CAACE,YAAY,IAAI,CAACF,QAAQ,CAACG,MAAM,IAAI,CAACH,QAAQ,CAACI,YAAY,IAAI,CAACJ,QAAQ,CAACK,YAAa;QAAAyD,QAAA,EAEnHvD,OAAO,GAAG,eAAe,GAAG;MAAiB;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1E,EAAA,CAzUuBD,OAAO;EAAA,QAEZL,WAAW;AAAA;AAAAwG,EAAA,GAFNnG,OAAO;AAAA,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}