{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivashanker\\\\react\\\\car wash\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport UserContext from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    userData,\n    loading\n  } = useContext(UserContext);\n  const location = useLocation();\n\n  // Show loading indicator while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If not logged in, redirect to login page\n  if (!userData || !userData.id) {\n    // Redirect to login page with the return URL\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If logged in, show the protected content\n  return children;\n}\n_s(ProtectedRoute, \"HwvwCoHK8hwdg013IzViu/jWyHY=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","UserContext","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","userData","loading","location","style","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","id","to","state","from","pathname","replace","_c","$RefreshReg$"],"sources":["C:/Users/shivashanker/react/car wash/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\n\r\nexport default function ProtectedRoute({ children }) {\r\n  const { userData, loading } = useContext(UserContext);\r\n  const location = useLocation();\r\n\r\n  // Show loading indicator while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <div>Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If not logged in, redirect to login page\r\n  if (!userData || !userData.id) {\r\n    // Redirect to login page with the return URL\r\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\r\n  }\r\n\r\n  // If logged in, show the protected content\r\n  return children;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EACrD,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIQ,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKO,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAT,QAAA,eAC/FF,OAAA;QAAAE,QAAA,EAAK;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEV;;EAEA;EACA,IAAI,CAACX,QAAQ,IAAI,CAACA,QAAQ,CAACY,EAAE,EAAE;IAC7B;IACA,oBAAOhB,OAAA,CAACJ,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEb,QAAQ,CAACc;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E;;EAEA;EACA,OAAOb,QAAQ;AACjB;AAACC,EAAA,CArBuBF,cAAc;EAAA,QAEnBJ,WAAW;AAAA;AAAAyB,EAAA,GAFNrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}